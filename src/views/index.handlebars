{{> nav}}

<section class="bienvenidos">

  <h1>Bienvenidos...</h1>
  
    <h2>A mi proyecto final del curso de Backend de Coderhouse</h2>
    <img src="/images/logoCoderSquare.jpg" alt="logo Coder">
</section>
<section class="contenido">
  <h2>SOBRE EL PROYECTO</h2>
  <p>El proyecto consiste en un ecommerce de venta de bater칤as para veh칤culos.</p>
  <h3>Proceso de compra</h3>
  <p>Aunque no se ped칤a en las consignas del proyecto, me pareci칩 interesante poder programar la compra sin obligar al usuario a registrarse antes de elegir los productos. Para finalizar la compra s칤 se exige registro y autenticaci칩n, pero por lo menos no es necesario para elegir los productos y armar el carrito. </p><p>De esta manera, el proceso de compra implica los pasos siguientes en el recorrido del usuario:</p>
  <ul class="proceso">
    <li><p class="numero">1</p><p>El usuario elige los productos y los carga en un carrito que se guarda en el localstorage</p></li>
    <li><p class="numero">2</p><p>Los productos se pueden cargar de a 1 desde la p치gina donde se muestran todos los productos (a futuro tambi칠n se podr치n cargar desde la p치gina de producto, eligiendo tambi칠n la cantidad)</p></li>
    <li><p class="numero">3</p><p>El carrito as칤 armado se puede ver haciendo click en el 칤cono de compra en la barra del men칰 superior (el 칤cono muestra tambi칠n la cantidad de productos ya cargados en el carrito)</p></li>
    <li><p class="numero">4</p><p>En la p치gina de visualizaci칩n del carrito se pueden modificar las cantidades de cada producto (hasta un m치ximo igual al stock del producto). Tambi칠n se pueden borrar los productos, o borrar el carrito completo.</p></li>
    <li><p class="numero">5</p><p>Desde la misma p치gina del carrito se da inicio a la compra haciendo click en el bot칩n correspondiente. Ese inicio de compra crea una cookie que marca el inicio de una "sesi칩n" de compra.</p></li>
    <li><p class="numero">6</p><p>Se dispara un sweet alert para confirmar el inicio de compra</p></li>
    <li><p class="numero">7</p><p>Si el usuario no est치 logueado, se lo dirige a la p치gina de login</p></li>
    <li><p class="numero">8</p><p>Una vez logueado, el usuario es dirigido a la p치gina de currentUser para que vea sus datos, y contin칰e la compra</li>
    <li><p class="numero">9</p><p>Con el usuario ya logueado, se le pide confirmaci칩n de la compra y en ese momento se guarda el carrito en la base de datos y se asocia al usuario (se guarda el id del carrito en el documento del usuario)</p></li>
    <li><p class="numero">10</p><p>Si el usuario sale de la p치gina de confirmaci칩n de compra y modifica el carrito del localstorage, el proceso de compra empieza de nuevo</p></li>
    <li><p class="numero">11</p><p>Confirmada la compra, se genera el ticket de compra y se env칤a el email de confirmaci칩n de compra.</p></li>

  </ul>
  <p>NO se incluye la programaci칩n de la pasarela de pagos. 游땞</p>
  <h3>Sobre los carritos de compra</h3>
  <p>Si el usuario inicia el proceso de compra varias veces seguidas, se generan igual cantidad de carritos de compra. Para que la base de datos no se llene de carritos que nunca se van a comprar, los carritos se generan con una propiedad "createdAt" que tiene un ttl de 10 minutos. Pasado ese tiempo el carrito se borra</p>
  <p>A su vez, y como el id de cada carrito queda guardado en el documento del usuario, cuando el usuario se vuelve a loguear, se verifica que los ids de carritos guardados en el array de la propiedad "cartID" correspondan a carritos que s칤 existen; de lo contrario se borran. (No se borran todos los id de carritos porque puede haber carritos que hayan sido generados luego de un proceso de compra, con productos faltantes en el stock al momento de la compra. Estos carritos se borran 1 mes despu칠s de creados.)</p>
  <h3>Frontend</h3>
  <p>La mayor칤a de las vistas iniciales de cada p치gina se renderizan con Handlebars desde el servidor, pero todos los cambios en las vistas debido a la interacci칩n del usuario se realizan con javascript del lado del cliente, haciendo llamandos a la API a trav칠s del m칠todo "FETCH".</p>
  <h3>Categor칤as en el men칰 de navegaci칩n</h3>
  <p>
    El men칰 desplegable se carga din치micamente mediante un script del lado del cliente que obtiene las categor칤as con un fetch cada vez que se carga una nueva p치gina. Originalmente hab칤a pensado que se pod칤a utilizar un partial de handlebars renderizado desde el servidor, pero no supe c칩mo hacerlo.
  </p>
  <h2>Extras</h2>
  <p>Adem치s de lo que se ped칤a en la consigna del trabajo final (el recorrido completo de una compra, desde la elecci칩n de los productos y el registro del usuario hasta el env칤o del email de confirmaci칩n de compra), el frontend contiene:</p>
  <h3>Panel de administraci칩n</h3>
  <p>Inclu칤 un par de vistas para el administrador, que permiten administrar los productos y borrar carritos. Respecto a los productos, se pueden modificar, borrar y agregar nuevos. NO hay vistas para administrar usuarios. (Por ahora... 游땔)</p>
  <h3>Restablecimiento de contrase침a</h3>
  <p>El usuario puede reestablecer su contrase침a olvidada mediante un formulario de recupero de contrase침a al que se accede desde la p치gina de login. El email que recibe contiene un enlace que lo dirige a una p치gina donde puede cargar su nueva contrase침a y loguearse nuevamente.</p>
  <h3>Login con github</h3>
  <p>Se permite el registro y login con credenciales de github</p>
</section>

{{> footer}}
